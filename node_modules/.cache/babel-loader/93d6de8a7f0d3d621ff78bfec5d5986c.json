{"ast":null,"code":"var _jsxFileName = \"/home/tahany/react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport SeasonDisplay from './SeasonDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //     lat: null,\n    //     long: null,\n    //     errorMsg: ''\n    // };\n\n    this.state = {\n      lat: null,\n      long: null,\n      errorMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude,\n        long: position.coords.longitude\n      }); // console.log(position)\n    }, err => {\n      this.setState({\n        errorMsg: err.message\n      });\n    });\n    console.log(\"my component was rendered to the screen \");\n  }\n\n  componentDidUpdate() {\n    console.log(\"my component was just updated - it rerendered \");\n  } //React says we have to define render!!\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Latitude: \", this.state.lat, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 44\n      }, this), \"longitude: \", this.state.long, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 46\n      }, this), this.state.errorMsg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst container = document.getElementById('root');\nconst root = ReactDOM.createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 13\n}, this));","map":{"version":3,"names":["React","ReactDOM","SeasonDisplay","App","Component","constructor","props","state","lat","long","errorMsg","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","err","message","console","log","componentDidUpdate","render","container","document","getElementById","root","createRoot"],"sources":["/home/tahany/react/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport SeasonDisplay from './SeasonDisplay';\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        // this.state = {\n        //     lat: null,\n        //     long: null,\n        //     errorMsg: ''\n        // };\n    }\n    state = {lat: null, long: null, errorMsg: ''};\n    componentDidMount() {\n        \n        window.navigator.geolocation.getCurrentPosition(\n            position => {\n                this.setState({\n                    lat: position.coords.latitude,\n                    long: position.coords.longitude\n                });\n                // console.log(position)\n            },\n            err => {\n                this.setState({errorMsg: err.message});\n            }\n        );\n        console.log(\"my component was rendered to the screen \")\n    }\n    componentDidUpdate() {\n        console.log(\"my component was just updated - it rerendered \")\n    }\n    //React says we have to define render!!\n    render() {\n        \n        return(\n            <div>\n                Latitude: {this.state.lat} <br />\n                longitude: {this.state.long} <br />\n                {this.state.errorMsg}\n            </div>\n        ) \n    }\n}\nconst container = document.getElementById('root');\nconst root = ReactDOM.createRoot(container);\nroot.render(<App />);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;EAC9BC,WAAW,CAACC,KAAD,EAAO;IACd,MAAMA,KAAN,EADc,CAEd;IACA;IACA;IACA;IACA;;IANc,KAQlBC,KARkB,GAQV;MAACC,GAAG,EAAE,IAAN;MAAYC,IAAI,EAAE,IAAlB;MAAwBC,QAAQ,EAAE;IAAlC,CARU;EAOjB;;EAEDC,iBAAiB,GAAG;IAEhBC,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACIC,QAAQ,IAAI;MACR,KAAKC,QAAL,CAAc;QACVT,GAAG,EAAEQ,QAAQ,CAACE,MAAT,CAAgBC,QADX;QAEVV,IAAI,EAAEO,QAAQ,CAACE,MAAT,CAAgBE;MAFZ,CAAd,EADQ,CAKR;IACH,CAPL,EAQIC,GAAG,IAAI;MACH,KAAKJ,QAAL,CAAc;QAACP,QAAQ,EAAEW,GAAG,CAACC;MAAf,CAAd;IACH,CAVL;IAYAC,OAAO,CAACC,GAAR,CAAY,0CAAZ;EACH;;EACDC,kBAAkB,GAAG;IACjBF,OAAO,CAACC,GAAR,CAAY,gDAAZ;EACH,CA5B6B,CA6B9B;;;EACAE,MAAM,GAAG;IAEL,oBACI;MAAA,yBACe,KAAKnB,KAAL,CAAWC,GAD1B,oBAC+B;QAAA;QAAA;QAAA;MAAA,QAD/B,iBAEgB,KAAKD,KAAL,CAAWE,IAF3B,oBAEiC;QAAA;QAAA;QAAA;MAAA,QAFjC,EAGK,KAAKF,KAAL,CAAWG,QAHhB;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAOH;;AAvC6B;;AAyClC,MAAMiB,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlB;AACA,MAAMC,IAAI,GAAG7B,QAAQ,CAAC8B,UAAT,CAAoBJ,SAApB,CAAb;AACAG,IAAI,CAACJ,MAAL,eAAY,QAAC,GAAD;EAAA;EAAA;EAAA;AAAA,QAAZ"},"metadata":{},"sourceType":"module"}